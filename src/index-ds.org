#+title: 分布式系统 Distributed System

- http://book.mixu.net/distsys/single-page.html
- [[file:design-data-intensive-applications.org][Design Data-Intensive Applications]]
- [[http://dancres.org/reading_list.html][A Distributed Systems Reading List]]
- [[http://duanple.blog.163.com/blog/static/709717672011330101333271/][分布式系统领域经典论文翻译集]]

** Projects
- [[file:akka.org][Akka]] Akka文档阅读笔记
- [[file:storm.org][Storm]] Twitter的流式处理系统
- [[file:samza.org][Samza]] LinkedIn的流式处理系统
- [[file:hadoop.org][Hadoop]] Apache的分布式系统基础架构总称
  - [[file:hadoop-overview.org][Hadoop Overview]] @ 2012
  - [[file:hadoop-benchmark.org][Hadoop Benchmark]]
  - [[file:hadoop-definitive-guide.org][Hadoop权威指南(笔记)]]
- [[file:hdfs.org][HDFS]] Apache Hadoop项目的 [[file:gfs.org][GFS]] 开源实现
- [[file:hbase.org][HBase]] Apache Hadoop项目的 [[file:bigtable.org][BigTable]] 开源实现
  - [[file:hbase-definitive-guide.org][HBase权威指南(笔记)]]
  - [[file:hbase-configuration.org][Apache HBase Configuration]]
- [[file:mapred.org][MapReduce]] Apache Hadoop项目的 [[file:mapreduce.org][MapReduce]] 开源实现
- [[file:azkaban.org][Azkaban]] Linkedin的工作流系统，比 [[file:oozie.org][Oozie]] 好用太多.
- [[file:opentsdb.org][OpenTSDB]] 在 [[file:hbase.org][HBase]] 上构建的时间序列(time series)数据库
- [[file:impala.org][Impala]] Cloudera的 [[file:dremel.org][Dremel]] 开源实现
- [[file:presto.org][Presto]] Facebook的 [[file:dremel.org][Dremel]] 开源实现
- [[file:spark.org][Spark]] AMPLab的分布式计算系统
- [[file:paxos.org][Paxos]] / [[file:raft.org][Raft]] 分布式一致性算法

** Articles
- 201810 [[file:fallacies-of-distributed-computing-explained.org][Fallacies of Distributed Computing Explained]]
- 201808 [[file:youtube-scalability.org][YouTube Scalability]] on youtube
- 201712 [[file:timeline-at-scale-in-twitter.org][Timeline at Scale in Twitter]] by Raffi Krikorian @ 2013
- 201711 [[file:getting-real-about-distributed-system-reliability.org][Getting Real About Distributed System Reliability]] Jay Kreps （分布式系统的真实的可靠性）
- 201606 [[file:anaconda-high-perf-solution.org][Anacoda High Performance Solution]]
- 201604 [[file:data-infra-at-airbnb.org][Data Infrastructure at Airbnb]]
- [[file:distributed-system-reading.org][Distributed System Reading]]
- [[file:you-can-not-sacrifice-partition-tolerance.org][You Can't Sacrifice Partition Tolerance]]
- [[file:the-anatomy-of-the-google-architecture.org][The Anatomy Of The Google Architecture]] @2009 Google架构的深入解析，属于非官方文档，是一个非Google的友人收集各种资料汇集起来的
- [[file:building-scalable-highly-concurrent-and-fault-tolerant-systems.org][Building Scalable, Highly Concurrent & Fault-Tolerant Systems: Lessons Learned]]
- [[file:data-structures-and-algorithms-for-big-databases.org][Data Structures and Algorithms for Big Databases]]
- [[file:building-software-systems-at-google-and-lessons-learned.org][Building Software Systems at Google and Lessons Learned]] @Stanford-2010 Jeff Dean
- [[file:web-search-for-a-planet.org][Web Search for a Planet]] @2003 Google Web Search
- [[file:case-study-gfs-evolution-on-fast-forward.org][Case Study GFS: Evolution on Fast-forward]] @2009 GFS1
- [[file:how-to-beat-the-cap-theorem.org][How to beat the CAP theorem]]
- [[file:google-cluster-computing-faculty-traning-workshop.org][Google Cluster Computing Faculty Training Workshop]]
- [[file:mapreduce-a-major-step-backwards.org][MapReduce: A major step backwards]] PDBMS阵营对MR阵营的批评
- [[file:mapreduce-a-major-step-backwards-ii.org][MapReduce: A major step backwards-ii]] PDBMS阵营对MR阵营的第二轮批评
- [[file:a-comparison-of-approaches-to-large-scale-data-analysis.org][A Comparison of Approaches to Large-Scale Data Analysis]]
- [[file:mapreduce-a-flexible-data-processing-tool.org][MapReduce: A Flexible Data Processing Tool]] MR阵营对PDBMS阵营的回应
- [[file:mapreduce-and-parellel-dbms-friends-or-foes.org][MapReduce and Parallel DBMSs: Friends or Foes?]] PDBMS阵营和MR阵营达成和解
- [[file:mapreduce-versus-parellel-dbms.org][MapReduce Versus Parallel DBMS]]
- [[file:distributed-algorithms-in-nosql-databases.org][Distributed Algorithms in NoSQL Databases]]
- [[file:mapreduce-a-minor-step-forward.org][MapReduce: A Minor Step Forward]] James Hamilton对PDBMS和MR的看法
- [[file:large-scale-data-and-computation-chanllenges-and-opportunities.org][Large-Scale Data and Computation: Challenges and Opportunities]] @Stanford-2013 Jeff Dean
- [[file:designs-lessons-and-advice-from-building-large-distributed-systems.org][Designs, Lessons and Advice from Building Large Distributed Systems]] @LADIS-2009 Jeff Dean
- [[file:tail-at-scale.org][The Tail at Scale]] @2013 CACM Jeff Dean
- [[file:realtime-big-data-analytics-emerging-architecture.org][Real-Time Big Data Analytics: Emerging Architecture]]
- [[file:unveil-google-app-engine.org][探索Google App Engine背后的奥秘]]
- [[file:beating-the-cap-theorem-checklist.org][Beating the CAP Theorem Checklist]] "遇到声称能突破CAP原理的民科的时候，用这个checklist来对付他" via @delphij
- [[file:in-stream-big-data-processing.org][In-Stream Big Data Processing]] 流式处理系统一些需要解决的问题以及方法
- [[file:lessons-learned-while-building-infrastructure-software-at-google.org][Lessons Learned While Building Infrastructure Software at Google]] @XLDB-2013 Jeff Dean
- [[file:a-word-on-scalability.org][A Word on Scalability]]
- [[file:application-resilience-in-a-service-oriented-architecture.org][Application Resilience in a Service-oriented Architecture]]
- [[file:building-data-science-teams.org][Building Data Science Teams]]
- [[file:on-designing-and-deploying-internet-scale-services.org][On Designing and Deploying Internet-Scale Services]] @2007
- [[file:analysis-of-hdfs-under-hbase-a-facebook-messages-case-study.org][Analysis of HDFS Under HBase: A Facebook Messages Case Study]] @2014
- [[file:the-log-what-every-software-engineer-should-know-about-real-time-datas-unifying-abstraction.org][The Log: What every software engineer should know about real-time data's unifying abstraction]]
- [[file:hadoop-at-a-crossroads.org][Hadoop at a Crossroads?]] by Michael Stonebraker
- [[file:a-typical-data-processing-system.org][A Typical Data Processing System]] by me:) 一个典型的数据处理系统
- [[file:what-does-big-data-mean.org][What Does 'Big Data' Mean?]] by Michael Stonebraker
- [[file:possible-hadoop-trajectories.org][Possible Hadoop Trajectories]] by Michael Stonebraker
- [[file:notes-on-distributed-systems-for-young-bloods.org][Notes on Distributed Systems for Young Bloods]] 写给分布式系统新手的笔记
- [[file:bringing-spark-closer-to-bare-metal.org][Project Tungsten: Bringing Spark Closer to Bare Metal]] 优化Spark性能的一篇文章
- [[file:lessons-learned-while-working-on-large-scale-server-softwarre.org][Lessons Learned while Working on Large-Scale Server Software]]
- [[file:questioning-the-lambda-architecture.org][Questioning the Lambda Architecture]] @2014
- [[file:service-disoriented-architecture.org][Service-Disoriented Architecture]] 对SOA(和microservices)的反思
- [[file:building-a-production-machine-learning-infrastructure.org][Building a Production Machine Learning Infrastructure]] 构建用于生产的ML基础架构（如何平衡算法和工程）
- [[file:scaling-lessons-learned-at-dropbox.org][Scaling lessons learned at Dropbox]]
- [[file:microservices-not-a-free-lunch.org][Microservices - Not A Free Lunch!]]
- [[file:what-it-takes-to-run-stack-overflow.org][What it takes to run Stack Overflow]] @2013.11
- [[file:mesos-omega-borg-a-survey.org][mesos, omega, borg: a survey]] @2015
- [[file:what-does-it-take-to-make-google-work-at-scale.org][What does it take to make Google work at scale?]] @2015
- [[file:building-a-terabyte-scale-data-cycle-at-linkedin-with-hadoop-and-project-voldemort.org][Building a terabyte-scale data cycle at LinkedIn with Hadoop and Project Voldemort]] @ 2009
- [[file:project-voldemort-scaling-simple-storage-at-linkedin.org][Project Voldemort: Scaling Simple Storage at LinkedIn]] @ 2009
- [[file:druid-design-doc.org][Druid Design Doc]] Metamarket的大规模数据上的实时OLAP
- [[file:intro-druid-real-time-analytics-at-a-billion-rows-per-second.org][Introducing Druid: Real-Time Analytics at a Billion Rows Per Second]] @2011
- [[file:druid-part-deux-three-principles-for-fast-dist-olap.org][Druid, Part Deux: Three Principles for Fast, Distributed OLAP]] @2011
- [[file:corona.org][Under the Hood: Scheduling MapReduce jobs more efficiently with Corona]] @ 2012
- [[file:yarn-intro.org][Introducing Apache Hadoop YARN]] @ 2012
- [[file:manhattan.org][Manhattan, our real-time, multi-tenant distributed database for Twitter scale]] @ 2014
- [[file:best-practices-for-selecting-apache-hadoop-hardware.org][Best Practices for Selecting Apache Hadoop Hardware]] @2011
- [[file:the-dark-side-of-hadoop.org][The dark side of Hadoop - BackType Technology]] @2011
- [[file:apache-hadoop-goes-realtime-at-facebook.org][Apache Hadoop Goes Realtime at Facebook]] @2011
- [[file:is-hadoop-out-of-date.org][Hadoop即将过时了吗？]] @2012
- [[file:hdfs-reliability-with-namenode-and-avatarnode.org][Hadoop Distributed Filesystem reliability with Namenode and Avatarnode]] @2012
- [[file:ha-namenode-for-hdfs-with-hadoop1.org][HA Namenode for HDFS with Hadoop 1.0]] @2012
- [[file:hadoop-io-files.org][Hadoop I/O: Sequence, Map, Set, Array, BloomMap Files]] @2011
- [[file:why-not-raid0-in-hdfs.org][Why not RAID-0? It's about Time and Snowflakes]] @2012
- [[file:hbase-write-path.org][HBase Write Path]] @ 2012
- [[file:hbase-log-splitting.org][HBase Log Splitting]] @2012
- [[file:alibaba-hbase-practice.org][阿里HBase业务设计实践]] @ 2012
- [[file:using-hbase-with-iomemory.org][Using HBase with ioMemory]] by fusion-io
- [[file:7-tips-for-improving-mapreduce-performance.org][7 Tips for Improving MapReduce Performance]] @2009
- [[file:mapreduce-patterns-algos-and-use-cases.org][MapReduce Patterns, Algorithms, and Use Cases]] @2012
- [[file:cloudera-impala-real-time-queries-in-apache-hadoop-for-real.org][Cloudera Impala: Real-Time Queries in Apache Hadoop, For Real]] @2012
- [[file:streambase.org][A Glance on StreamBase]] 之前调研过的商用流式处理系统
- [[file:thoughts-on-systems-for-large-datasets.org][Thoughts on Systems for Large Datasets: Problems and Opportunities]] @ 2014 Jeff Dean
- [[file:why-google-stores-billions-of-lines-of-code-in-a-single-repository.org][Why Google Stores Billions of Lines of Code in a Single Repository]] @ 2016
- [[file:achieving-rapid-response-times-in-large-online-services.org][Achieving Rapid Response Times in Large Online Services]] @ 2012 Jeff Dean
- [[file:large-scale-deep-learning-for-intelligent-computer-systems.org][Large-Scale Deep Learning for Intelligent Computer Systems]] @ 2016 Jeff Dean

** Papers
- 201712 [[file:nobody-ever-got-fired-for-buying-a-cluster.org][Nobody ever got fired for buying a cluster]] 计算集群的必要性思考 @ 2013
- [[file:chubby.org][The Chubby lock service for loosely-coupled distributed systems]] @ 2006
- [[file:gfs.org][The Google File System]] @ 2003
- [[file:mapreduce.org][MapReduce: Simplified Data Processing on Large Clusters]] @ 2004
- [[file:bigtable.org][Bigtable: A Distributed Storage System for Structured Data]] @ 2006
- [[file:kafka.org][Kafka: a Distributed Messaging System for Log Processing]] @ 2012
- [[file:the-hadoop-distributed-file-system.org][The Hadoop Distributed File System]] @2010
- [[file:hdfs-reliability.org][HDFS Reliability]] @2008
- [[file:hdfs-scalability-the-limits-to-growth.org][HDFS scalability: the limits to growth]] @2010
- [[file:mapreduce-online.org][MapReduce Online]] @2010
- [[file:zookeeper.org][ZooKeeper: Wait-free coordination for Internet-scale systems]] @ 2010
- [[file:pig.org][Pig Latin: A Not-So-Foreign Language for Data Processing]] @ 2010
- [[file:dremel.org][Dremel: Interactive Analysis of Web-Scale Datasets]] @ 2010
- [[file:power-drill.org][Processing a Trillion Cells per Mouse Click]] @ 2012
- [[file:pregel.org][Pregel: A System for Large-Scale Graph Processing]] @ 2010
- [[file:percolator.org][Large-scale Incremental Processing Using Distributed Transactions and Notifications]] @ 2010
- [[file:tenzing.org][Tenzing A SQL Implementation On The MapReduce Framework]] @ 2011
- [[file:megastore.org][Megastore: Providing Scalable, Highly Available Storage for Interactive Services]] @ 2011
- [[file:spanner.org][Spanner: Google's Globally-Distributed Database]] @ 2012
- [[file:f1-talk.org][F1: The Fault-Tolerant Distributed RDBMS Supporting Google's Ad Business]] @ 2012
- [[file:f1.org][F1: A Distributed SQL Database That Scales]] @ 2013
- [[file:dapper.org][Dapper, a Large-Scale Distributed Systems Tracing Infrastructure]] @ 2010
- [[file:gwp.org][Google-Wide Profiling: A Continuous Profiling Infrastructure for Data Centers]] @ 2010
- [[file:dynamo.org][Dynamo: Amazon's Highly Available Key-value Store]] @ 2007
- [[file:cassandra.org][Cassandra - A Decentralized Structured Storage System]] @ 2009
- [[file:time-clocks-and-ordering-of-events-in-a-distributed-system.org][Time, Clocks, and Ordering of Events in a Distributed System]]
- [[file:omega.org][Omega: flexible, scalable schedulers for large compute clusters]] @ 2013
- [[file:borg.org][Large-scale cluster management at Google with Borg]] @ 2015
- [[file:ceph.org][Ceph: A Scalable, High-Performance Distributed File System]] @ 2006
- [[file:flumejava.org][FlumeJava: Easy, Efficient Data-Parallel Pipelines]] @ 2010
- [[file:photon.org][Photon: Fault-tolerant and Scalable Joining of Continuous Data Streams]] @ 2013
- [[file:haystack.org][Finding a needle in Haystack: Facebook's photo storage]] @ 2010
- [[file:millwheel.org][MillWheel: Fault-Tolerant Stream Processing at Internet Scale]] @ 2013
- [[file:voldemort.org][Serving Large-scale Batch Computed Data with Project Voldemort]] @ 2012
- [[file:mesos.org][Mesos: A Platform for Fine-Grained Resource Sharing in the Data Center]] @ 2010
- [[file:pnuts.org][PNUTS: Yahoo!'s Hosted Data Serving Platform]] @ 2008
- [[file:spark-paper.org][Spark: Cluster Computing with Working Sets]] @ 2010
- [[file:spark-rdd-paper.org][Resilient Distributed Datasets: A Fault-Tolerant Abstraction for In-Memory Cluster Computing]] @ 2012
- [[file:spark-phd-paper.org][An Architecture for Fast and General Data Processing on Large Clusters]]
- [[file:the-dataflow-model.org][The Dataflow Model: A Practical Approach to Balancing Correctness, Latency, and Cost in Massive-Scale, Unbounded, Out-of-Order Data Processing]] @ 2015
