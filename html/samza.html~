<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head><!-- Global site tag (gtag.js) - Google Analytics --><script async src="https://www.googletagmanager.com/gtag/js?id=UA-31377772-3"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-31377772-3');</script>
<meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>samza</title>
<meta name="generator" content="Org mode" />
<meta name="author" content="maypeppa" />
<link rel="shortcut icon" href="/themes/favicon.ico" /><link rel="stylesheet" type="text/css" href="/themes/styles/readtheorg/css/htmlize.css"/><link rel="stylesheet" type="text/css" href="/themes/styles/readtheorg/css/readtheorg.css"/><script src="https://ajax.loli.net/ajax/libs/jquery/2.1.3/jquery.min.js"></script><script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js"></script><script type="text/javascript" src="/themes/styles/lib/js/jquery.stickytableheaders.min.js"></script><script type="text/javascript" src="/themes/styles/readtheorg/js/readtheorg.js"></script></head>
<body>
<div id="content">
<h1 class="title">samza</h1>
<p>
<a href="http://samza.incubator.apache.org/">http://samza.incubator.apache.org/</a>
</p>

<p>
Samza is made up of three layers:
</p>
<ul class="org-ul">
<li>A streaming layer. <a href="kafka.html">Kafka</a></li>
<li>An execution layer. <a href="yarn.html">YARN</a></li>
<li>A processing layer. samza-api</li>
</ul>

<p>
samza架构和hadoop-mapreduce架构非常类似. 1)从kafka读取数据 2)经过samza-api进行处理 3)将输出写入kafka.
</p>

<p>
<img src="images/samza-ecosystem.png" alt="samza-ecosystem.png" /> <img src="images/samza-hadoop.png" alt="samza-hadoop.png" /> <img src="images/samza-job.png" alt="samza-job.png" />
</p>

<p>
因为samza架构借鉴了hadoop-mapreduce架构, 所以许多术语也沿用下来了.
</p>
<ul class="org-ul">
<li>partition # kafka内部就对message-stream进行了partition.</li>
<li>job &amp; task # 一个task对应一个input partition. 所以job的task数量由kafka topic的partition数量决定.</li>
<li>container # 使用yarn来对每个task进行资源管理.</li>
</ul>

<p>
通过streaming-layer将jobs串联起来组成dataflow-graphs.
</p>


<div class="figure">
<p><img src="images/samza-dag.png" alt="samza-dag.png" />
</p>
</div>


<p>
关于state管理问题, samza-api层面提供了local-storage接口, 但是这个接口其实没有解决太多问题. 使用这个local-storage接口虽然可以在本地存储部分状态数据来减轻对remote-storage的压力, 但是如果task失败的话 samza并不负责这个local-data的迁移. 所以一些关键性的数据还是必须存储在remote-storage上比如当前处理的message-id等.
</p>
</div>
<div id="content"><!-- DISQUS BEGIN --><div id="disqus_thread"></div><script>/***  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.*  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/var disqus_config = function () {this.page.url = 'https://maypeppa.github.io/html/samza.html';this.page.identifier = 'samza.html';};(function() {var d = document, s = d.createElement('script');s.src = 'https://dirlt.disqus.com/embed.js';s.setAttribute('data-timestamp', +new Date());(d.head || d.body).appendChild(s);})();</script><noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript><!-- DISQUS END --></div></body>
</html>
