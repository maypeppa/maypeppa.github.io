<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head><!-- Global site tag (gtag.js) - Google Analytics --><script async src="https://www.googletagmanager.com/gtag/js?id=UA-31377772-3"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-31377772-3');</script>
<meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>tips-for-optimizing-c-cpp-code</title>
<meta name="generator" content="Org mode" />
<meta name="author" content="maypeppa" />
<link rel="shortcut icon" href="/themes/favicon.ico" /><link rel="stylesheet" type="text/css" href="/themes/styles/readtheorg/css/htmlize.css"/><link rel="stylesheet" type="text/css" href="/themes/styles/readtheorg/css/readtheorg.css"/><script src="https://ajax.loli.net/ajax/libs/jquery/2.1.3/jquery.min.js"></script><script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js"></script><script type="text/javascript" src="/themes/styles/lib/js/jquery.stickytableheaders.min.js"></script><script type="text/javascript" src="/themes/styles/readtheorg/js/readtheorg.js"></script></head>
<body>
<div id="content">
<h1 class="title">tips-for-optimizing-c-cpp-code</h1>
<hr />
<p>
General:
</p>
<ul class="org-ul">
<li>Remember Ahmdal's Law. This is often phrased as: "make the common case fast and the rare case correct."</li>
<li>Code for correctness first, then optimize!</li>
<li>People I know who write very efficient code say they spend at least twice as long optimizing code as they spend writing code.</li>
</ul>

<hr />
<p>
Impl:
</p>
<ul class="org-ul">
<li>Jumps/branches are expensive. Minimize their use whenever possible.</li>
<li>Think about the order of array indices. #note: about CPU cache.</li>
<li>Think about instruction-level-parallelism. #note: data dependent instructions.</li>
<li>Be careful using table-lookup functions.</li>
<li>Be careful using templates.</li>
<li>Avoid dynamic memory allocation during computation.</li>
<li>Find and utilize information about your systemâ€™s memory cache.</li>
<li>Try to early loop termination and early function returns.</li>
<li>Simplify your equations on paper!</li>
<li>The difference between math on integers, fixed points, 32-bit floats, and 64-bit doubles is not as big as you might think.</li>
<li>Consider ways of rephrasing your math to eliminate expensive operations.</li>
</ul>

<hr />
<p>
#note: but I think compiler is good enough now
</p>
<ul class="org-ul">
<li>Avoid/reduce the number of local variables.</li>
<li>Reduce the number of function parameters.</li>
<li>Pass structures by reference, not by value.</li>
<li>If you do not need a return value from a function, do not define one.</li>
<li>Try to avoid casting where possible.</li>
<li>Make default class constructors as lightweight as possible.</li>
<li>Use shift operations &gt;&gt; and &lt;&lt; instead of integer multiplication and division, where possible.</li>
<li>For most classes, use the operators += , -= , *= , and /= , instead of the operators + , - , * , and / .</li>
<li>For basic data types, use the operators + , - , * , and / instead of the operators += , -= , *= , and /= .</li>
<li>Delay declaring local variables.</li>
<li>For objects, use the prefix operator (<del><del>obj) instead of the postfix operator (obj</del></del>).</li>
<li>Avoid unnecessary data initialization.</li>
</ul>
</div>
<div id="content"><!-- DISQUS BEGIN --><div id="disqus_thread"></div><script>/***  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.*  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/var disqus_config = function () {this.page.url = 'https://maypeppa.github.io/html/tips-for-optimizing-c-cpp-code.html';this.page.identifier = 'tips-for-optimizing-c-cpp-code.html';};(function() {var d = document, s = d.createElement('script');s.src = 'https://dirlt.disqus.com/embed.js';s.setAttribute('data-timestamp', +new Date());(d.head || d.body).appendChild(s);})();</script><noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript><!-- DISQUS END --></div></body>
</html>
